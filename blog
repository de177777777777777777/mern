<!DOCTYPE html>
<html lang="en">
<head>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <style>
    body {
      margin: 0;
      padding: 0;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background: linear-gradient(to right, #e0c3fc, #8ec5fc);
      min-height: 100vh;
      color: #333;
      display: flex;
      flex-direction: column;
      align-items: center;
    }
    h1 {
      margin: 20px 0;
      font-size: 2rem;
      color: #2c3e50;
    }
    .container {
      width: 90%;
      max-width: 600px;
      background: #fff;
      padding: 20px;
      border-radius: 12px;
      box-shadow: 0 8px 16px rgba(0,0,0,0.1);
      margin-bottom: 20px;
    }
    label {
      font-weight: bold;
      margin-top: 10px;
      display: block;
    }
    input, textarea {
      width: 100%;
      padding: 10px;
      margin-top: 5px;
      margin-bottom: 15px;
      border: 1px solid #ccc;
      border-radius: 6px;
      font-size: 1rem;
    }
    button {
      padding: 10px 16px;
      background-color: #6a11cb;
      background-image: linear-gradient(315deg, #6a11cb 0%, #2575fc 74%);
      color: white;
      border: none;
      border-radius: 6px;
      cursor: pointer;
      font-size: 1rem;
    }
    button:hover {
      opacity: 0.9;
    }
    #posts {
      margin-top: 20px;
    }
    @media (max-width: 600px) {
      h1 {
        font-size: 1.5rem;
      }
      .container {
        padding: 15px;
      }
    }
  </style>
  <meta charset="UTF-8">
  <title>Blog App</title>
</head>
<body>
  <h1>Blog Posts</h1>

  <div class="container">
    <label for="title">Title</label>
    <input id="title" placeholder="Enter the blog title">
    <label for="category">Category</label>
    <input id="category" placeholder="Enter category">
    <label for="content">Content</label>
    <textarea id="content" placeholder="Write your blog content here..."></textarea>
    <button onclick="createPost()">Post</button>
  </div>

  <div class="container">
    <label for="filterCategory">Filter by Category</label>
    <input id="filterCategory" placeholder="Type a category">
    <button onclick="loadPosts()">Filter</button>
  </div>

  <div id="posts" class="container"></div>

  <script>
    const API_BASE = 'http://localhost:5000';

    async function createPost() {
      const title = document.getElementById('title').value;
      const content = document.getElementById('content').value;
      const category = document.getElementById('category').value;
      await fetch(\`\${API_BASE}/posts\`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ title, content, category })
      });
      loadPosts();
    }

    async function loadPosts() {
      const category = document.getElementById('filterCategory').value;
      const res = await fetch(\`\${API_BASE}/posts\${category ? '?category=' + category : ''}\`);
      const posts = await res.json();
      const container = document.getElementById('posts');
      container.innerHTML = '';

      for (let post of posts) {
        const postDiv = document.createElement('div');
        postDiv.innerHTML = \`
          <h2>\${post.title}</h2>
          <p><em>Category: \${post.category}</em></p>
          <p>\${post.content}</p>
          <input id="comment-\${post._id}" placeholder="Add a comment">
          <button onclick="addComment('\${post._id}')">Comment</button>
          <ul id="comments-\${post._id}"></ul>
        \`;
        container.appendChild(postDiv);
        loadComments(post._id);
      }
    }

    async function addComment(postId) {
      const commentInput = document.getElementById(\`comment-\${postId}\`);
      const text = commentInput.value;
      await fetch(\`\${API_BASE}/comments\`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ postId, text })
      });
      commentInput.value = '';
      loadComments(postId);
    }

    async function loadComments(postId) {
      const res = await fetch(\`\${API_BASE}/comments/\${postId}\`);
      const comments = await res.json();
      const commentList = document.getElementById(\`comments-\${postId}\`);
      commentList.innerHTML = '';
      for (let comment of comments) {
        const li = document.createElement('li');
        li.textContent = comment.text;
        commentList.appendChild(li);
      }
    }

    loadPosts();
  </script>
</body>
</html>
