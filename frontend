import React, { useEffect, useState } from "react";
import axios from "axios";

export default function BlogApp() {
  const [posts, setPosts] = useState([]);
  const [categories, setCategories] = useState([]);
  const [selectedCategory, setSelectedCategory] = useState(null);
  const [newComment, setNewComment] = useState("");
  const [currentPostId, setCurrentPostId] = useState(null);

  const API = "http://localhost:5000/api";

  useEffect(() => {
    fetchPosts();
    fetchCategories();
  }, [selectedCategory]);

  const fetchPosts = async () => {
    try {
      const res = selectedCategory
        ? await axios.get(`${API}/posts/category/${selectedCategory}`)
        : await axios.get(`${API}/posts`);
      setPosts(res.data);
    } catch (err) {
      console.error(err);
    }
  };

  const fetchCategories = async () => {
    try {
      const res = await axios.get("http://localhost:5000/api/categories");
      setCategories(res.data);
    } catch (err) {
      console.error(err);
    }
  };

  const handleAddComment = async (postId) => {
    try {
      await axios.post(`${API}/comments/${postId}`, {
        author: "Anonymous",
        text: newComment,
      });
      setNewComment("");
      setCurrentPostId(null);
      fetchPosts();
    } catch (err) {
      console.error(err);
    }
  };

  return (
    <div className="p-6 max-w-5xl mx-auto">
      <h1 className="text-4xl font-bold mb-6">Blog</h1>

      <div className="mb-4">
        <select
          className="border rounded p-2"
          onChange={(e) => setSelectedCategory(e.target.value)}
        >
          <option value="">All Categories</option>
          {categories.map((cat) => (
            <option key={cat._id} value={cat._id}>
              {cat.name}
            </option>
          ))}
        </select>
      </div>

      {posts.map((post) => (
        <div key={post._id} className="border rounded-lg p-4 mb-6 shadow">
          <h2 className="text-2xl font-semibold mb-1">{post.title}</h2>
          <p className="text-sm text-gray-600 mb-2">
            Category: {post.category?.name || "None"}
          </p>
          <p className="mb-4">{post.content}</p>

          <h3 className="font-bold mb-2">Comments:</h3>
          <ul className="mb-2">
            {post.comments.map((comment) => (
              <li key={comment._id} className="text-sm border-b py-1">
                {comment.author}: {comment.text}
              </li>
            ))}
          </ul>

          {currentPostId === post._id ? (
            <div className="flex gap-2">
              <input
                className="border rounded p-1 flex-grow"
                type="text"
                value={newComment}
                onChange={(e) => setNewComment(e.target.value)}
              />
              <button
                className="bg-blue-500 text-white px-3 py-1 rounded"
                onClick={() => handleAddComment(post._id)}
              >
                Add
              </button>
            </div>
          ) : (
            <button
              className="text-blue-500 text-sm"
              onClick={() => setCurrentPostId(post._id)}
            >
              Add Comment
            </button>
          )}
        </div>
      ))}
    </div>
  );
}
